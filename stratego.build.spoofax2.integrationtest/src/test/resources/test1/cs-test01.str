module cs-test01
imports Expressions libstratego-lib
strategies
  
  main = 
    test-suite(!"cs-test01",
	  test1(A1 | "test1 - A1")
	; test1(A2 | "test1 - A2")
	; test1(A3 | "test1 - A3")

	; test2(B1 | "test2 - B1")
	; test2(B2 | "test2 - B2")
	; test2(B3 | "test2 - B3")

	; test3(C1 | "test3 - C1")
	; test3(C2 | "test3 - C2")
	; test3(C3 | "test3 - C3")

	; test4(D1 | "test4 - D1")
	; test5(D2 | "test5 - D2")
	; test6(D3 | "test6 - D3")
    )

  test1(r | msg) =
    apply-test(!msg
	, r
	, !|[ f(a, b, c, d) ]|
	, !|[ a, b, c, d ]|
	)

  test2(r | msg) =
    apply-test(!msg
	, r
	, !|[ f(a, b, c, d) ]|
	, !|[ b, c, d, a ]|
	)

  test3(r | msg) =
    apply-test(!msg
	, r
	, !|[ f(a, b, c, d) ]|
	, !|[ c, d, b, a ]|
	)


  test4(r | msg) =
    apply-test(!msg
	, r
	, !|[ f(a, b, c, d) ]|
	, !|[ a, b, c, d, a, b, c, d ]|
	)

  test5(r | msg) =
    apply-test(!msg
	, r
	, !|[ f(a, b, c, d) ]|
	, !|[ a, b, c, d, f, a, b, c, d ]|
	)

  test6(r | msg) =
    apply-test(!msg
	, r
	, !|[ f(a, b, c, d) ]|
	, !|[ a, b, c, d, f, a, b, c, d, g, a, b, c, d ]|
	)

rules

  A1 : |[ x(e*) ]| -> |[ e* ]|

  A2 : |[ x(e*) ]| -> e* 

  A3 : |[ x(es) ]| -> es


  B1 : |[ x(e, e*) ]| -> |[ e*, e ]|

  B2 : |[ x(e, e*) ]| -> [e*, e]

  B3 : |[ x(e, es) ]| -> <conc>(es, [e])


  C1 : |[ x(e1, e2, e*) ]| -> |[ e*, e2, e1 ]|

  C2 : |[ x(e1, e2, e*) ]| -> [e*, e2, e1]

  C3 : |[ x(e1, e2, es) ]| -> <conc>(es, [e2, e1])


  D1 : |[ x(e*) ]| -> |[ e*, e*]|

  D2 : |[ x(e*) ]| -> |[ e*, f, e*]|

  D3 : |[ x(e*) ]| -> |[ e*, f, e*, g, e*]|
