module test91
imports libstratego-lib

strategies

  main = <rewr> f(100, empty())

signature
  sorts Domain Range Map
  constructors
    undefined : Range
    empty     : Map
    rel       : Domain * Range -> Map
    join      : Map * Map -> Map
    insert    : Domain * Range * Map -> Map
    lookup    : Map * Domain -> Range
    f         : Int * Map -> Map
    myadd     : Int * Int -> Int
    mydiv     : Int * Int -> Int
    foo       : Map * Int * Int * Int -> Map

rules

  I : insert(D, R, empty()) -> join(rel(D, R), empty())

  I : insert(D, R, join(rel(D', R'), rest)) ->
                   join(rel(D', R'), insert(D, R, rest)) 
      where <not(eq)> (D, D')

  I : lookup(join(rel(D, R), rest), D') -> R 
      where <eq> (D, D')

  I : lookup(join(rel(D, R), rest), D') -> lookup(rest, D') 
      where <not(eq)> (D, D')

  I : lookup(empty(), D) -> undefined()

  I : myadd(X, Y) -> <add>(X,Y)

  I : mydiv(X, Y) -> <div>(X,Y)

  I : f(0, M) -> insert(0, 1, M)

  I : f(N', M) -> foo(f(N, M), N', N, M)
      where <gt>(N',0); <subti>(N',1) => N

  I : foo(I, N', N, M) ->
      insert(N', myadd(lookup(I, mydiv(N,2)),
                       lookup(I, mydiv(N,4))), I)

strategies

  rewr = innermost(I)

