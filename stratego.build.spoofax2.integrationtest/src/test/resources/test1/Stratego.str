module Stratego

signature
  sorts
    String
    SCoercion
    Coercion
    SVar
    Proxy
    SType
    Type
    SSimpleFunType
    SFunType
    SortVar
    SortT
    UCID
    Id
    Dyn
    Term
    RuleNames
    Typedid
    RuleDec
    DynRuleScopeId
    DynRuleId
    Rule
    RuleDef
    DynRuleDef
    ScopeLabels
    Strategy
    RuleCond
    Overlay
    SwitchCase
    StrategyCurly
    StrategyAngle
    LId
    LID
    ModName
    ImportModName
    Decl
    Def
    Sdecl
    Module
    StrategyMid
    StrategyParen
    ID
    OldType
    Anno
    EmptyId
    StrategyDef
    RuleNames
    Char
    Real
    Int
    ConstType
    OpType
    OldArgType
    FunType
    RetType
    Opdecl
    Sort
    LCID
    Wld
    PreTerm
    Var
    Padding
    StringQuotedPart4
    StringQuotedPart3
    StringQuotedPart2
    StringQuotedPart1
    StringQuotation
  constructors
    ProxyT                   : List(SCoercion) * List(Coercion) * Coercion * Coercion * SVar -> Proxy
    Proxy                    : Coercion * Coercion * SVar -> Proxy
    SRuntimeCheck            : SType -> SCoercion
    SId                      : SCoercion
    SFail                    : SCoercion
    RuntimeCheck             : Type -> Coercion
    Id                       : Coercion
    Fail                     : Coercion
    FunTType                 : List(SType) * List(Type) * SSimpleFunType -> SFunType
    FunType                  : List(SType) * SSimpleFunType -> SFunType
                             : SSimpleFunType -> SFunType
    FunNoArgsType            : Type * Type -> SSimpleFunType
    TP                       : SSimpleFunType
                             : SFunType -> SType
    SDyn                     : SType
    SortVar                  : SortVar -> SortT
    SortNoArgs               : UCID -> SortT
    Sort                     : Id * List(Type) -> SortT
                             : SortT -> Type
    RealT                    : Type
    IntT                     : Type
    StringT                  : Type
    DynT                     : Dyn -> Type
    TupleT                   : Type * List(Type) -> Type
    Dyn                      : Dyn
    RuleNames                : Term -> RuleNames
                             : List(Id) -> RuleNames
    RDecT                    : Id * List(Typedid) * List(Typedid) -> RuleDec
    RDec                     : Id * List(Typedid) -> RuleDec
    RDecNoArgs               : Id -> RuleDec
    DynRuleScopeId           : Id -> DynRuleScopeId
    LabeledDynRuleScopeId    : Id * Term -> DynRuleScopeId
    DynRuleId                : RuleDec -> DynRuleId
    AddLabelDynRuleId        : RuleDec * Term -> DynRuleId
    LabeledDynRuleId         : RuleDec * Term -> DynRuleId
    SetDynRuleDepends        : DynRuleId * Rule * Term -> DynRuleDef
    DynRuleAssignAdd         : DynRuleId * Term -> DynRuleDef
    DynRuleAssign            : DynRuleId * Term -> DynRuleDef
    SetDynRuleMatch          : DynRuleId * Term -> DynRuleDef
    AddDynRule               : DynRuleId * Rule -> DynRuleDef
    SetDynRule               : DynRuleId * Rule -> DynRuleDef
    UndefineDynRule          : DynRuleId * Term -> DynRuleDef
    AddScopeLabel            : Id * Term -> DynRuleDef
    ScopeLabels              : Term -> ScopeLabels
                             : List(DynRuleScopeId) -> ScopeLabels
    WithClause               : Strategy -> RuleCond
    WhereClause              : Strategy -> RuleCond
    Rule                     : Term * Term * List(RuleCond) -> Rule
    Rule                     : Term * Term * Strategy -> Rule
    RuleNoCond               : Term * Term -> Rule
    RDefP                    : Id * List(Typedid) * List(Term) * Rule -> RuleDef
    RDefT                    : Id * List(Typedid) * List(Typedid) * Rule -> RuleDef
    RDef                     : Id * List(Typedid) * Rule -> RuleDef
    RDefNoArgs               : Id * Rule -> RuleDef
    Overlay                  : Id * List(Id) * Term -> Overlay
    OverlayNoArgs            : Id * Term -> Overlay
    SwitchCase               : Strategy * Strategy -> SwitchCase
    StrategyCurly            : Strategy -> StrategyCurly
                             : Strategy -> StrategyAngle
    ListVar                  : LId -> LID
    ImportWildcard           : ModName -> ImportModName
    Import                   : ModName -> ImportModName
    Overlays                 : List(Overlay) -> Decl
    Rules                    : List(Def) -> Decl
    Signature                : List(Sdecl) -> Decl
    Strategies               : List(Def) -> Decl
    Imports                  : List(ImportModName) -> Decl
    Specification            : List(Decl) -> Module
    Module                   : ModName * List(Decl) -> Module
                             : Strategy -> StrategyMid
    ParenStrat               : Strategy -> StrategyParen
    DefaultVarDec            : ID -> Typedid
    VarDec                   : ID * OldType -> Typedid
    Internal                 : Anno
    Override                 : Anno
    Extend                   : Anno
                             : String -> EmptyId
    SDefP                    : Id * List(Typedid) * List(Term) * Strategy -> StrategyDef
    SDef                     : Id * List(Typedid) * Strategy -> StrategyDef
    SDefNoArgs               : Id * Strategy -> StrategyDef
    ExtSDef                  : EmptyId * List(Typedid) * List(Typedid) -> StrategyDef
    ExtSDef                  : Id * List(Typedid) * List(Typedid) -> StrategyDef
    ExtSDefInl               : Id * List(Typedid) * List(Typedid) * Strategy -> StrategyDef
    SDefT                    : Id * List(Typedid) * List(Typedid) * Strategy -> StrategyDef
                             : Proxy -> Strategy
    TypeTest                 : Type -> Strategy
    Cast                     : Coercion -> Strategy
    DynRuleIntersectUnion    : Strategy * RuleNames * RuleNames * Strategy -> Strategy
    DynRuleUnion             : Strategy * RuleNames * Strategy -> Strategy
    DynRuleIntersect         : Strategy * RuleNames * Strategy -> Strategy
    DynRuleIntersectUnionFix : RuleNames * RuleNames * Strategy -> Strategy
    DynRuleUnionFix          : RuleNames * Strategy -> Strategy
    DynRuleIntersectFix      : RuleNames * Strategy -> Strategy
    GenDynRules              : List(DynRuleDef) -> Strategy
    DynRuleScope             : ScopeLabels * Strategy -> Strategy
    Assign                   : Term * Term -> Strategy
    AM                       : Strategy * Term -> Strategy
    SwitchChoice             : Strategy * List(SwitchCase) * Strategy -> Strategy
    SwitchChoiceNoOtherwise  : Strategy * List(SwitchCase) -> Strategy
    IfThen                   : Strategy * Strategy -> Strategy
    CondChoice               : Strategy * Strategy * Strategy -> Strategy
    Proceed                  : List(Strategy) -> Strategy
    RChoice                  : Strategy * Strategy -> Strategy
    Choice                   : Strategy * Strategy -> Strategy
    SRule                    : Rule -> Strategy
    LRule                    : Rule -> Strategy
    CallNoArgs               : SVar -> Strategy
    ExplodeCong              : Strategy * StrategyParen -> Strategy
    ListCong                 : List(Strategy) * Strategy -> Strategy
    ListCongNoTail           : List(Strategy) -> Strategy
    TupleCong                : Strategy * List(Strategy) -> Strategy
    EmptyTupleCong           : Strategy
    AnnoCong                 : Strategy * StrategyCurly -> Strategy
    CongQ                    : String * List(Strategy) -> Strategy
    CharCong                 : Char -> Strategy
    RealCong                 : Real -> Strategy
    IntCong                  : Int -> Strategy
    StrCong                  : String -> Strategy
    Prim                     : String * List(Term) -> Strategy
    PrimNoArgs               : String -> Strategy
    Test                     : Strategy -> Strategy
    With                     : Strategy -> Strategy
    Where                    : Strategy -> Strategy
    Not                      : Strategy -> Strategy
    Rec                      : Id * Strategy -> Strategy
    LChoice                  : Strategy * Strategy -> Strategy
    BA                       : StrategyAngle * Term -> Strategy
    ScopeDefault             : Strategy -> Strategy
    Call                     : SVar * List(Strategy) -> Strategy
    ImportTerm               : ModName -> Strategy
    All                      : Strategy -> Strategy
    One                      : Strategy -> Strategy
    Some                     : Strategy -> Strategy
    PrimT                    : String * List(Strategy) * List(Term) -> Strategy
    GuardedLChoice           : Strategy * StrategyMid * Strategy -> Strategy
    Seq                      : Strategy * Strategy -> Strategy
    Scope                    : List(ID) * Strategy -> Strategy
    Build                    : Term -> Strategy
    Match                    : Term -> Strategy
    ProceedNoArgs            : Strategy
    ProceedT                 : List(Strategy) * List(Term) -> Strategy
    Id                       : Strategy
    Fail                     : Strategy
    CallDynamic              : Term * List(Strategy) * List(Term) -> Strategy
    CallT                    : SVar * List(Strategy) * List(Term) -> Strategy
    Let                      : List(Def) * Strategy -> Strategy
    SVar                     : Id -> SVar
    DefHasTType              : Id * List(SType) * List(Type) * SSimpleFunType -> Def
    DefHasType               : Id * List(SType) * SSimpleFunType -> Def
    DefHasTypeNoArgs         : Id * SSimpleFunType -> Def
                             : RuleDef -> Def
    AnnoDef                  : List(Anno) * RuleDef -> Def
    AnnoDef                  : List(Anno) * StrategyDef -> Def
                             : StrategyDef -> Def
    FunType                  : List(ConstType) * ConstType -> OpType
                             : ConstType -> OpType
                             : ConstType -> OldType
                             : FunType -> OldType
                             : OldType -> RetType
                             : ConstType -> OldArgType
                             : OldType -> OldArgType
    FunType                  : List(OldArgType) * RetType -> FunType
    DynT                     : Dyn -> ConstType
    ConstType                : Sort -> ConstType
    ExtOpDeclInj             : OpType -> Opdecl
    ExtOpDeclQ               : String * OpType -> Opdecl
    ExtOpDecl                : Id * OpType -> Opdecl
    OpDeclInj                : OpType -> Opdecl
    OpDeclQ                  : String * OpType -> Opdecl
    OpDecl                   : Id * OpType -> Opdecl
    SortTuple                : List(Sort) -> Sort
    SortListTl               : List(Sort) * Sort -> Sort
    SortList                 : List(Sort) -> Sort
    Sort                     : Id * List(Sort) -> Sort
    SortNoArgs               : UCID -> Sort
    SortVar                  : LCID -> Sort
    Constructors             : List(Opdecl) -> Sdecl
    Sorts                    : List(Sort) -> Sdecl
    Wld                      : Wld
    TypeAscription           : Term * Type -> Term
    RootApp                  : StrategyAngle -> Term
    App                      : Strategy * Term -> Term
    NoAnnoList               : PreTerm -> Term
    AnnoList                 : PreTerm * List(Term) -> Term
    BuildDefault             : Term -> Term
    As                       : Var * Term -> Term
    Anno                     : PreTerm * PreTerm -> Term
                             : Wld -> Term
                             : Var -> Term
                             : LID -> ID
                             : Id -> ID
    Var                      : LID -> Var
    Var                      : Id -> Var
                             : String -> Char
                             : String -> Padding
    QBr                      : String -> StringQuotedPart4
    QDollar                  : String -> StringQuotedPart4
    QStr                     : String -> StringQuotedPart4
    StringEscape4            : Padding * Term -> StringQuotedPart4
    QBr                      : String -> StringQuotedPart3
    QDollar                  : String -> StringQuotedPart3
    QStr                     : String -> StringQuotedPart3
    StringEscape3            : Padding * Term -> StringQuotedPart3
    QBr                      : String -> StringQuotedPart2
    QDollar                  : String -> StringQuotedPart2
    QStr                     : String -> StringQuotedPart2
    StringEscape2            : Padding * Term -> StringQuotedPart2
    QBr                      : String -> StringQuotedPart1
    QDollar                  : String -> StringQuotedPart1
    QStr                     : String -> StringQuotedPart1
    StringEscape1            : Padding * Term -> StringQuotedPart1
    StringQuotation4         : Padding * List(StringQuotedPart4) -> StringQuotation
    StringQuotation3         : Padding * List(StringQuotedPart3) -> StringQuotation
    StringQuotation2         : Padding * List(StringQuotedPart2) -> StringQuotation
    StringQuotation1         : Padding * List(StringQuotedPart1) -> StringQuotation
    ListTail                 : List(Term) * Term -> PreTerm
    List                     : List(Term) -> PreTerm
    Tuple                    : List(Term) -> PreTerm
    RootApp                  : StrategyAngle -> PreTerm
    App                      : Strategy * Term -> PreTerm
    Char                     : Char -> PreTerm
    BuildDefaultPT           : PreTerm -> PreTerm
    As                       : Var * PreTerm -> PreTerm
    Explode                  : Term * Term -> PreTerm
    OpQ                      : String * List(Term) -> PreTerm
    Op                       : Id * List(Term) -> PreTerm
    Str                      : String -> PreTerm
    Real                     : Real -> PreTerm
    Int                      : Int -> PreTerm
                             : Wld -> PreTerm
                             : Var -> PreTerm
                             : StringQuotation -> PreTerm
                             : String -> String
                             : String -> Real
                             : String -> Int
                             : String -> SortVar
                             : String -> UCID
                             : String -> LCID
                             : String -> LId
                             : String -> Id
                             : String -> ModName


signature
  sorts
    Option(a)
  constructors
    Some : a -> Option(a)
    None : Option(a)


signature
  sorts
    List(a)
  constructors
    Cons : a * List(a) -> List(a)
    Nil  : List(a)
    Conc : List(a) * List(a) -> List(a)
