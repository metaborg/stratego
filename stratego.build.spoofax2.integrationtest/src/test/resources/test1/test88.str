module test88
imports libstratego-lib

signature
  constructors
    DeclId : Id -> DeclId
    Id : String -> Id

strategies

  main = 
    test-suite(!"test88",
      test2
    )

// --------------------------

// original test reported by Daniel Waddington

  runtest3 =
    !( DeclId(Id("a"{0}))
     , DeclId(Id("b"{1}))
     , DeclId(Id("c"{2}){3})
     , DeclId(Id("d"))
     )
    ; topdown(
        {t,t2,x:
         test(!"c" ; ?t);
         if DeclId(Id(test(?t))) /* works with O3 */ then
           debug(!"1st bang method matched ok:")
         else
           debug(!"no match: ")
         end;
         
         if DeclId(Id(test(?t))) /* works with O3 */ then
           debug(!"2nd bang method matched ok:")
         else
           debug(!"no match: ")
         end
        })

// --------------------------

// an abstraction

  test1 =
    apply-test(!"test1"
      , foo1
      , !DeclId(Id("c"{2}){3})
      )

  foo1 = 
    test(!"c" ; ?t);
    if DeclId(Id(test(?t))) /* works with O3 */ then
      debug(!"1st bang method matched ok:")
    else
      debug(!"no match: ")
    end;
         
    if DeclId(Id(test(?t))) /* works with O3 */ then
      debug(!"2nd bang method matched ok:")
    else
      debug(!"no match: ")
    end

  test1 =
    apply-test(!"test1"
      , foo1
      , !DeclId(Id("c"{2}){3})
      )

// --------------------------

// the basic issue seems to be the annotation match

  test2 =
    apply-and-fail(!"test2"
      , foo2
      , !DeclId(Id("c"{2}){3})
      )

  foo2 = 
    test(!"c" ; ?t)
    ; debug(!"test2: ")
    ; DeclId(Id(test(?t)))
    ; DeclId(Id(test(?t)))
