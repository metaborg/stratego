Module(
  "lists"
, [ Imports([Import("libstratego-lib")])
  , Signature(
      [ Sorts([SortNoArgs("List")])
      , Constructors(
          [ OpDecl("Nil", ConstType(Sort("List", [SortVar("a")])))
          , OpDecl(
              "Cons"
            , FunType(
                [ConstType(SortVar("a")), ConstType(Sort("List", [SortVar("a")]))]
              , ConstType(Sort("List", [SortVar("a")]))
              )
            )
          ]
        )
      ]
    )
  , Strategies(
      [ SDefNoArgs(
          "s"
        , MultiMatch(
            Sequential()
          , [ ScopedMatchCase(
                []
              , NoAnnoList(ListTail([NoAnnoList(Int("1"))], Wld()))
              , Build(NoAnnoList(Int("1")))
              )
            , ScopedMatchCase(
                []
              , NoAnnoList(ListTail([Wld(), NoAnnoList(Int("1"))], Wld()))
              , Build(NoAnnoList(Int("3")))
              )
            , ScopedMatchCase(
                []
              , NoAnnoList(
                  ListTail(
                    [Wld()]
                  , NoAnnoList(
                      List([NoAnnoList(Int("2")), NoAnnoList(Int("3"))])
                    )
                  )
                )
              , Build(NoAnnoList(Int("2")))
              )
            ]
          )
        )
      , SDefNoArgs(
          "main"
        , Call(
            SVar("test-suite")
          , [ Build(NoAnnoList(Str("\"multimatch on some lists\"")))
            , Seq(
                CallNoArgs(SVar("list1"))
              , Seq(
                  CallNoArgs(SVar("list2"))
                , Seq(CallNoArgs(SVar("list3")), CallNoArgs(SVar("list4")))
                )
              )
            ]
          )
        )
      , SDefNoArgs(
          "list1"
        , Call(
            SVar("apply-test")
          , [ Build(NoAnnoList(Str("\"list1\"")))
            , CallNoArgs(SVar("s"))
            , Build(
                NoAnnoList(
                  List(
                    [NoAnnoList(Int("1")), NoAnnoList(Int("2")), NoAnnoList(Int("3"))]
                  )
                )
              )
            , Build(NoAnnoList(Int("1")))
            ]
          )
        )
      , SDefNoArgs(
          "list2"
        , Call(
            SVar("apply-test")
          , [ Build(NoAnnoList(Str("\"list2\"")))
            , CallNoArgs(SVar("s"))
            , Build(
                NoAnnoList(
                  List(
                    [NoAnnoList(Int("2")), NoAnnoList(Int("2")), NoAnnoList(Int("3"))]
                  )
                )
              )
            , Build(NoAnnoList(Int("2")))
            ]
          )
        )
      , SDefNoArgs(
          "list3"
        , Call(
            SVar("apply-test")
          , [ Build(NoAnnoList(Str("\"list3\"")))
            , CallNoArgs(SVar("s"))
            , Build(
                NoAnnoList(
                  List(
                    [NoAnnoList(Int("0")), NoAnnoList(Int("1")), NoAnnoList(Int("1"))]
                  )
                )
              )
            , Build(NoAnnoList(Int("3")))
            ]
          )
        )
      , SDefNoArgs(
          "list4"
        , Call(
            SVar("apply-and-fail")
          , [ Build(NoAnnoList(Str("\"list4\"")))
            , CallNoArgs(SVar("s"))
            , Build(
                NoAnnoList(
                  List(
                    [NoAnnoList(Int("0")), NoAnnoList(Int("2")), NoAnnoList(Int("8"))]
                  )
                )
              )
            ]
          )
        )
      ]
    )
  ]
)