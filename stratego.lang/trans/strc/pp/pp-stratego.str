module pp-stratego

imports 
  libstratego-lib
  libstratego-xtc 

signature
  constructors
    Comment : a * List(String) -> a

strategies

//  io-pp-stratego =
//    xtc-io-wrap(
//      pp-stratego-options <+ io-options
//    ,
//      xtc-pp-and-parse-stratego
//    )
  
//  xtc-pp-and-parse-stratego =
//    if not(<get-config> "--abstract") then
//      xtc-transform(!"parse-stratego",!["-b" | <pass-includes> ])
//    end
//  ; read-from
//  ; with(
//      file   := <xtc-new-file>
//    ; stream := <open-stream> (file, "w")
//    )
//  ; finally(
//      pp-stratego-stream(|stream), <fclose> stream
//    )
//  ; !FILE(file)
  
//  pp-stratego-string =
//      pp-stratego-box
//    ; box2text-string(|80)
//  
//  pp-stratego-stream(|stream) =
//      pp-stratego-box
//    ; box2text-stream(|80, stream)
//    ; <fputs> ("\n", stream)
//    ; !stream
  
//  pp-stratego-box = 
//    Stratego-Ensugar
//    //; try(where(<get-config> "--annotations")
//    //      ; xtc-transform(!"annos-to-term"))
//    ; parenthesize-Stratego
//    ; topdown(try(\ Parenthetical(s) -> ParenStrat(s) \ ))
//    ; try(where(<get-config> "--annotations"); annos-as-comment)
//    ; stratego2abox

  pp-stratego-options =
    Option("-a" + "--abstract", where(<set-config>("--abstract", ())),
              !"-a | --abstract  source is abstract syntax")

  + Option("--annotations", where(<set-config>("--annotations", ())),
              !"--annotations    print annotations on abstract syntax")

  + ArgOption("-I" + "--Include", where(<extend-config>("-I", [<id>])),
          !"-I p|--Include p   include modules from directory p") 

  + ArgOption("-p" , where(<set-config>("-p", <id>)),
          !"-p file   use pptable in file instead of Stratego-pretty.pp")

  + ArgOption("-la", id,
              !"-la <name>         Ignored (for command-line compatibility with strc).")

  pass-includes =
    <get-config<+![]> "-I" ; foldr(id, conc, !["-I", <id>])

strategies

  annos-as-comment =
    bottomup(try(anno-as-comment))

  anno-as-comment :
    x{t,t*} -> Comment(x, [t,t*])
