module pack-stratego-options
imports
  libstratego-xtc
  strc/pack/pack-stratego-options
    
/**
 * Options
 */
signature
  constructors
    IncludeDir : String -> IncludeVal
    IncludeXTC : IncludeVal

  constructors
    IncludePathName : String -> Include
    IncludeFromPath : String -> Include

strategies

  pack-stratego-options =
      Option("--imports",
	where(<set-config> ("--imports", ())); !(),
	!"--imports            Produce a list of imported modules only")

    + Option("--slack",
	where(<set-config> ("--slack", ())); !(),
	!"--slack              Continue when module is not found")

    + ArgOption("--default-syntax", where(<set-config>("--default-syntax", <id>)),
	      !"--default-syntax syn        use syntax syn as default")

    + Option("--asfix",
        where(<set-config> ("--asfix", "")); !(),
        !"--asfix              Do not implode the concrete syntax parts")
 
    + Option("--prefer-str",
        where(<set-config> ("--prefer-str", "")); !(),
        !"--prefer-str              Prefer .str files over .rtree files")

  + ArgOption("--cache-dir",
        where(<set-config> ("--cache-dir", <where(file-exists; filemode; isdir <+ mkdir)>)); !(),
        !"--cache-dir <dir>  Maintain a parse cache in <dir>")
 
    + ArgOption("--desugaring", 
        where(<set-config>("--desugaring", <id>)),
        !"--desugaring on/off : turn desugaring on or off (default: off)")

    + ArgOption("--format-check",
        where(<set-config>("--format-check", <string-to-int>)); !(),
	!"--format-check n   Format check intermediate results (0 = basic checking)" )

    + pack-include-from-dir-option
    + pack-dep-options

  pack-process-options =
    where(
      (<get-config> "-I" <+ ![])

      /**
       * XTC is the final search option
       */
    ; <conc> (<id>, [IncludeXTC()])
      
      /**
       * The first search option is the directory of the input
       * file, or the current directory if the input is stdin.
       */
    ; if <get-config> "-i" => input then
        ![IncludeDir(<dirname> input) | <id>]
      else 
        ![IncludeDir(".") | <id>]
      end

    ; <set-config> ("-I", <id>)

    ; if not(<get-config> "--format-check") then
        <set-config> ("--format-check", 0)
      end
    )

  pack-if-prefer-str(s1, s2) =
    if <get-config> "--prefer-str" then s1 else s2 end

  pack-report-options =
    log(|Notice(), "include path: ", <get-config> "-I")

  pack-include-from-dir-option =
    ArgOption("-I" + "--Include"
    , where(<post-extend-config>("-I", [IncludeDir(<pack-ensure-directory>)]))
    , !"-I|--Include <dir>   Include modules from directory <dir>"
    )

  pack-ensure-directory =
    if not(file-exists) then
      warn(|"directory specified with -I does not exist: ")
    else
      if not(filemode; isdir) then
        warn(|"path specified with -I is a file, not a directory: ")
      end
    end

  pack-dep-options = 
    ArgOption("--dep" + "-d" + "-dep"
    , where(<set-config> ("-dep", <id>))
    , !"--dep <file> | -d <file>  Write make dependencies to <file>"
    )

  /**
   * Gets the include path from the config.
   *
   * The current working directory . is added to this path.
   */
  pack-include-path =
    <get-config> "-I" <+ ![]

  pack-depfile-from-config =
    <get-config> "-dep"

  pack-maybe-create-depfile =
    where(try(strc-create-dep-file(|<pack-depfile-from-config>)))

