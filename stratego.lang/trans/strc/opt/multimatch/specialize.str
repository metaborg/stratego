module specialize

imports
  strj/multimatch/dfa
  strj/multimatch/matrix

  signatures/core/terms-sig

strategies
  /*
   * Specialize the matrix to a certain constructor.
   */
  specialize(|Matrix(rows)): cons -> Matrix(<filter(specialize-row(|cons))> rows)

  specialize-row'(|cons) = id
  ; ?m; !(cons, m); conc-strings; debug(!"spec-row ") // Print cons and matrix
  ; !m; specialize-row(|cons) // Call original strategy

  specialize-row(|Fun(f, a)): Row([Anno(Op(f, qs), Wld()) | ps], A) ->
                              Row(<conc> (qs, ps), A)
  where
    <eq> (a, <length> qs)

  specialize-row(|Fun("string", 1)):  Row([Anno(Str(s), Wld()) | ps], A) ->
                                      Row([s | ps], A)

  specialize-row(|Fun("int", 1)):     Row([Anno(Int(i), Wld()) | ps], A) ->
                                      Row([i | ps], A)

  specialize-row(|Fun("real", 1)):    Row([Anno(Real(r), Wld()) | ps], A) ->
                                      Row([r | ps], A)

  specialize-row(|Fun(_, a)):         Row([Wld() | ps], A) ->
                                      Row(<repeat(![Wld() | <id>] | a)> ps, A)

//  specialize-row(|c) = where(!c; debug(!"cons: ")); debug(!"row: "); fail 
