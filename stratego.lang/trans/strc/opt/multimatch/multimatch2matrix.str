module multimatch/multimatch2matrix

imports
  strc/opt/multimatch/matrix
  strc/opt/multimatch/preprocess

  signatures/core/strategies-sig
  signatures/core/terms-sig

strategies
  /*======== Construct clause and action matrices ========*/
  multimatch2matrix: MultiMatch(Sequential(), cases) -> Scope(vars, Matrix([Cur()], rows))
  with
    <map(MatchCase2Row)> cases => rows
  ; <mapconcat(MatchCase2Vars)> cases => vars // TODO Vars should have unique names for each case

  multimatch2matrix = ?MultiMatch(<not(?Sequential())>, _)
  ; <fatal-error> ["MultiMatch should be converted to a sequential set of patterns first."]

  MatchCase2Row: ScopedMatchCase(_, t1, s) -> Row([t2], Id(), Id(), s) // just ignore scope?
    with <preprocess> t1 => t2
  MatchCase2Row: ScopedGuardedMatchCase(_, t1, s1, s2) -> Row([t2], Id(), s1, s2)
    with <preprocess> t1 => t2

  MatchCase2Vars = ?ScopedMatchCase(<id>, _, _)
  MatchCase2Vars = ?ScopedGuardedMatchCase(<id>, _, _, _)
