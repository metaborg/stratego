module strj/split-large-strategies

overlays
  /**
   * Minimum number of _terms_ in a strategy definition required to split it up.
   * Note that Java methods of over 8000 _instructions_ may no longer be eligible for JIT compilation
   * (see -XX:-DontCompileHugeMethod), and that Java defines a 64 KB instruction limit per method.
   *
   * Ideal would be 6000~7000 instructions (use -XX:+PrintCompilation for accurate figures).
   *
   * According to a benchmark with libstrc:
   *   2000 = good, 2500 = good, 3000~5000 = still good, 10.000 = bad
   */
  LARGE_STRATEGY_SIZE = 2500

strategies

  split-large-strategies =
    Specification([Signature([Constructors(id)]), Strategies(map(try(split-large-def)))])
  
  split-large-def :
    SDefT(x, s*, t*, s) -> SDefT(x, s*, t*, s')
    with
      s' := <split-large-strategy(|x)> s
  
  split-large-strategy(|x) =
    bottomup-at-large-terms(
      (?Seq(_, _) + ?GuardedLChoice(_, _, _))
    ; split-large-strategy-apply(|x)
    )

  bottomup-at-large-terms(s) =
    bottomup-at-large-terms'(s) => (<id>, _)
  
  bottomup-at-large-terms'(s) :
    t -> (t'', size')
    with
      t'-and-sizes := <all(bottomup-at-large-terms'(s))>
    ; t'           := <all(Fst)> t'-and-sizes
    ; size         := <crush(!1, add, Snd)> t'-and-sizes
    with
      ?SDefT(_, _, _, _) // don't count definitions
    ; t''   := t'
    ; size' := 0
    <+
      <gt> (size, LARGE_STRATEGY_SIZE())
    ; t''   := <s> t'
    ; size' := 0
    <+
      t''   := t'
    ; size' := size
  
  split-large-strategy-apply(|x) :
    |[ s ]| ->
    |[ let
         x_split(|) = s
       in
         { x_unused: // HACK: prevent inlining by simplify/HoistLet
           x_split(|)
         }
       end
    ]|
    with
      x_split  := <newname> <conc-strings> (x, "_fragment_")
    ; x_unused := <newname> "unused"

