/**
 * This module strj/locally redefines constructors
 * that are defined in both libstrc and lib-java-front,
 * thus overriding otherwise ambiguous references.
 *
 * @author Lennart Kats
 */
module strj/shared-constructors

signature constructors
  Int : Term
  Chars : Term -> Term
  Void : Term
  For : Term * Term -> Term
  For : Term * Term * Term * Term -> Term
  While : Term * Term -> Term
  Switch : Term * Term -> Term
  If : Term * Term -> Term
  VarDec : Term * Term -> Term
  ArrayInit : Term -> Term
  Assign : Term * Term -> Term
  And : Term * Term -> Term
  Gt : Term * Term -> Term
  Lt : Term * Term -> Term
  Div : Term * Term -> Term
  Mul : Term * Term -> Term
  Not : Term -> Term
  PreIncr : Term -> Term
  PostIncr : Term -> Term
  TypeName : Term * Term -> Term
  Double : Term
  Float : term
  Char : Term
  Long : Term
  Short : Term
  Char : Term
  Volatile : Term
  Static : Term
  Id : Term -> Term
  Parenthetical : Term -> Term
  Anno : Term * Term -> Term
  Return : Term -> Term

strategies

  // HACK: Need to locally redefine the congruences...

  internal Id(x) = ?Id(a){a*}; !Id(<x> a){a*}

  internal If(x, y) = ?If(a, b){a*}; !If(<x> a, <y> b){a*}

  internal While(x, y) = ?While(a, b){a*}; !While(<x> a, <y> b){a*}

  internal DoWhile(x, y) = ?DoWhile(a, b){a*}; !DoWhile(<x> a, <y> b){a*}

  internal Return(x) = ?Return(a){a*}; !Return(<x> a){a*}

  internal Break(x) = ?Break(a){a*}; !Break(<x> a){a*}
  
  internal VarDec(x, y) = ?VarDec(a, b){a*}; !VarDec(<x> a, <y> b){a*}
