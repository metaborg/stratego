module core/identifiers

lexical sorts ModName ModNamePart
lexical syntax
  ModName = {ModNamePart "/"}+
  ModNamePart = [a-zA-Z\.\_] [a-zA-Z0-9\'\.\-\_]*
lexical restrictions
  ModName -/- [a-zA-Z0-9\'\.\-\_]
context-free syntax
  ModName = "imports"     {reject}
  ModName = "overlays"    {reject}
  ModName = "rules"       {reject}
  ModName = "signature"   {reject}
  ModName = "strategies"  {reject}

lexical sorts Id LId LCID UCID SortVar BuiltInType SomeSort
lexical syntax
// Removed leading underscore option, nearly always conflicts with Term.BuildDefault
//  Id   = [a-zA-Z\_] [a-zA-Z0-9\'\-\_]*
//  LId  = [a-zA-Z\_] [a-zA-Z0-9\'\-\_]* "*"
  Id   = [a-zA-Z] [a-zA-Z0-9\'\-\_]*
  LId  = [a-zA-Z] [a-zA-Z0-9\'\-\_]* "*"
  Id   = [\'] [a-z]+

  LCID = [a-z] [a-zA-Z0-9\'\-\_]*
  UCID = [A-Z] [a-zA-Z0-9\'\-\_]*

  SortVar = LCID
  SortVar = BuiltInType {reject}
  BuiltInType = "string"
  BuiltInType = "int"
  BuiltInType = "real"
  BuiltInType = "blob"

lexical restrictions
  Id   -/- [a-zA-Z0-9\'\_\*]
  Id   -/- [\-].~[\>]
  LId  -/- [a-zA-Z0-9\'\-\_]
  LCID -/- [a-zA-Z0-9\'\-\_]
  UCID -/- [a-zA-Z0-9\'\-\_]

lexical syntax
  Id   = "_"      {reject}
  Id   = "'"      {reject}
  Id   = Keyword  {reject}
  Lid  = Keyword  {reject}
  LCID = Keyword  {reject}
  UCID = Keyword  {reject}

lexical sorts Keyword
lexical syntax
  Keyword = "all"
  Keyword = "constructors"
  Keyword = "fail"
  Keyword = "id"
  Keyword = "in"
  Keyword = "let"
  Keyword = "module"
  Keyword = "not"
  Keyword = "one"
  Keyword = "overlays"
  Keyword = "prim"
  Keyword = "proceed"
  Keyword = "rules"
  Keyword = "script"
  Keyword = "signature"
  Keyword = "some"
  Keyword = "sorts"
  Keyword = "strategies"
  Keyword = "stratego"
  Keyword = "test"
  Keyword = "where"
//  Keyword = "with"
  Keyword = "import-term"
  Keyword = "is"

lexical restrictions
  "all"
  "case"          // not reserved kw
  "constructors"
  "else"          // not reserved kw
  "end"           // not reserved kw
  "external"      // not reserved kw
  "fail"
  "id"
  "if"            // not reserved kw
  "in"
  "is"
  "imports"       // not reserved kw
  "let"
  "module"
  "not"
  "one"
  "overlays"
  "otherwise"     // not reserved kw
  "prim"
  "proceed"
  "rec"           // not reserved kw
  "rules"
  "script"
  "signature"
  "some"
  "sorts"
  "strategies"
  "stratego"
  "switch"        // not reserved kw
  "test"
  "then"          // not reserved kw
  "where"
  "with"
  "import-term"
    -/- [a-zA-Z0-9\'\-\_]
