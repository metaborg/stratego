module core/terms

imports
  core/identifiers
  core/constants

context-free sorts ID Var Wld
context-free syntax
  Var.Var = ID
  ID      = Id
  Wld.Wld = "_"

context-free sorts Term // term with annotations
context-free syntax

  Term      = Var
  Term      = Wld
  Term.Anno = <<PreTerm>{^<PreTerm>}>
  Term.As   = <<Var>@<Term>>

context-free sorts PreTerm // term without annotations
context-free syntax

  PreTerm         = Var
  PreTerm         = Wld

  PreTerm.Int     = Int
  PreTerm.Real    = Real
  PreTerm.Str     = String
  PreTerm.Op      = <<Id>(<{Term ", "}*>)>
  PreTerm.OpQ     = <<String>(<{Term ", "}*>)>
  PreTerm.Explode = <<Term>#(<Term>)>
  PreTerm.AsPT    = <<Var>@<PreTerm>>

context-free priorities
  PreTerm.Explode > Term.As,
  Term.Anno > PreTerm.AsPT
