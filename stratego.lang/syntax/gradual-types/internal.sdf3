module gradual-types/internal

imports
  core/identifiers
  core/constants
  core/modules
  gradual-types/signatures

context-free sorts Str2Lib
context-free syntax

  Str2Lib.Str2Lib = [library [ModNamePart]
    [{Str2LibComponent "\n"}+]
    [{Module "\n\n"}+]
  ]

  Str2LibComponent.Maven = [maven [groupId:Id]:[id:Id]:[MavenVersion]]
  Str2LibComponent.Package = [package [PackageName]]

lexical sorts VersionNumber VersionQualifier MavenVersion
lexical syntax

  MavenVersion = VersionNumber "." VersionNumber "." VersionNumber VersionQualifier
  VersionNumber = [0-9]+
  VersionQualifier = "-" [A-Za-z0-9\-\.]+
  PackageName = {Id "."}+
  Id = [A-Za-z\_\$] [A-Za-z0-9\_\$]+

lexical restrictions

  VersionQualifier -/- [A-Za-z0-9\-\.]

context-free sorts Type ConstrType
context-free syntax

  Def.DefHasType = [[Id] :: [SFunType]]

  Type.IllFormedTermT = [[Id]#([{Type ", "}*])]
  Type.ErrT = [err]
  Anno.LocalDef = [localdef]
  Anno.AmbiguousStrategyResolution = [ambiguous strategy resolves to arities: [Int], [Int]]
  SType.SErrT = [s-err]
  Dyn = Type // to allow DynT(<some type>)

  ConstrType.ConstrType = [[{Type " * "}+] -> [Type]]

context-free sorts ErrorDesc MessageType
context-free syntax
  MessageType.MTError = [error]
  MessageType.MTWarning = [warning]
  MessageType.MTNote = [note]

  ErrorDesc.CallDynamicNotSupported = [The dynamic `call(name|sargs|targs)` construct is no longer supported.]
  ErrorDesc.TermVariableTypedWithStrategyType = [This term variable was given a strategy type.]
  ErrorDesc.StrategyVariableTypedWithTermType = [This strategy variable was given a term type.]
  ErrorDesc.DuplicateTypeDefinition = [Duplicate type definition.]
  ErrorDesc.MissingDefinitionForTypeDefinition = [Cannot find definition for this type definition.]
  ErrorDesc.ProceedWrongNumberOfArguments = [Wrong number of arguments to proceed: ([Int]|[Int]).]
  ErrorDesc.ProceedInNonExtendStrategy = [Cannot call proceed in a strategy or rule defined without the `extend` keyword.]
  ErrorDesc.CallStrategyArgumentTakesParameters = [This call takes parameters, it has type: [SFunType].]
  ErrorDesc.AmbiguousStrategyResolution = [Call to strategy was ambiguous, could resolve to the following: [{SFunType ", "}+].]

  ErrorDesc.NormalDefinitionOverlapsWithExternal = [Definition of strategy overlaps with definition of external strategy.]
  ErrorDesc.NormalDefinitionOverlapsWithInternal = [Definition of strategy overlaps with definition of internal strategy.]
  ErrorDesc.OverrideDefinitionWithoutExternal = [Cannot find external strategy to override.]
  ErrorDesc.ExtendDefinitionWithoutExternal = [Cannot find external strategy to extend.]

  ErrorDesc.NoInjectionBetween = [Cannot convert from [Type] to [Type] automatically, no known injection.]
  ErrorDesc.VariableBoundToIncompatibleType = [This variable has type [Type], which cannot be converted to [Type] automatically.]
  ErrorDesc.NoLUBBetween = [Expected [Type] and [Type] to have a shared least upper bound but none was found.]
  ErrorDesc.STypeMismatch = [Expected [SType], but got [SType].]
  ErrorDesc.UnresolvedLocal = [Undefined local variable.]
  ErrorDesc.UnresolvedSort = [Undefined sort with arity [Int].]
  ErrorDesc.UnresolvedConstructor = [Undefined constructor with arity [Int] and type [Type].]
  ErrorDesc.UnresolvedStrategy = [Undefined strategy with arity [Int]/[Int].]
  ErrorDesc.AmbiguousConstructorUse = [Ambiguous use of constructor, could be the following types: [{Type ", "}+]]
  ErrorDesc.UnboundTypeVar = [No instantiation found for type variable [String]]

  ErrorDesc.AsInBuildTerm = [The @ pattern may not be used in build context.]
  ErrorDesc.WldInBuildTerm = [The _ pattern may not be used in build context.]
  ErrorDesc.BuildDefaultInBuildTerm = [The _name pattern may not be used in build context.]
  ErrorDesc.BuildDefaultInMatchTerm = [The _name pattern may not be used in match context.]
  ErrorDesc.StringQuotationInMatchTerm = [A string quotation pattern may not be used in match context.]

  ErrorDesc.NonStringOrListInExplodeConsPosition = [Expected type string or list, but got [Type].]
  ErrorDesc.NonListInAnno = [Expected list, but got [Type].]
  ErrorDesc.MultipleAppsInMatch = [Multiple projections in one pattern, only one is actually returned. ]

  ErrorDesc.MatchNotSpecificEnoughForTP = [Cannot infer specific type for TP rule match. Found result: [Type]. ]

  ErrorDesc.UnsupportedCastRequiredInDynamicRule = [Pattern induces cast, but cast is not supported in this position. ]

  ErrorDesc.DynRuleOverlapError = [Overlapping left-hand-sides for dynamic rule '[Id]': [String] in [String] overlaps with [String] in [String]. ]
  ErrorDesc.CannotCastToRigidTypeVar = [Cannot cast [Type] to type [Type], its type is not known at run-time in this position. ]
