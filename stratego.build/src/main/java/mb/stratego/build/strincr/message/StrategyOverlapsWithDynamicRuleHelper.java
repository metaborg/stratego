package mb.stratego.build.strincr.message;

import org.spoofax.interpreter.terms.IStrategoTerm;

import mb.stratego.build.strincr.data.StrategySignature;

public class StrategyOverlapsWithDynamicRuleHelper extends Message {
    public final String signature;

    public StrategyOverlapsWithDynamicRuleHelper(IStrategoTerm term, StrategySignature signature,
        MessageSeverity severity, long lastModified) {
        super(term, severity, lastModified);
        this.signature = signature.toString();
    }

    @Override public String getMessage() {
        return "The strategy " + signature
            + " was defined manually but also generated by a dynamic rule. ";
    }

    @Override public boolean equals(Object o) {
        if(this == o)
            return true;
        if(o == null || getClass() != o.getClass())
            return false;
        if(!super.equals(o))
            return false;

        StrategyOverlapsWithDynamicRuleHelper that = (StrategyOverlapsWithDynamicRuleHelper) o;

        return signature.equals(that.signature);
    }

    @Override public int hashCode() {
        int result = super.hashCode();
        result = 31 * result + signature.hashCode();
        return result;
    }
}
