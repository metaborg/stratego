module test

signature
  sorts
    Term
  constructors
    Nil 	: 				         List(a)
    Cons 	: a * List(a) 	-> List(a)
    Car 	: a 			      -> List(a)

rules
  uncar: Car(a) -> Cons(a, Nil())
  uncar: Car(a) -> Cons(a, Nil()) // should be skipped (equal)
  uncar = strat
  strat = id
  uncar: Nil() -> Nil()
  uncar: Car(b) -> Cons(b, Nil()) // should be skipped(?) (equal up to var names)
  uncar(x): Car(a) -> Cons(a, Nil())

<<<<<<< HEAD:stratego.example/test.str2
  simple :: Term -> Term
  simple: a -> Simple(a)
=======
strategies
  s1 = id
  s1 = fail
>>>>>>> 4d35a27 (Add basic transformation of rules to multimatch):stratego.example/test.stra
