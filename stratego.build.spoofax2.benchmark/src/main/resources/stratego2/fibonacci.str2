module fibonacci

imports strategolib

signature

sorts
   Nat

constructors
   d0 : Nat 
   s : Nat -> Nat 
   plus : Nat * Nat -> Nat 
   fibb : Nat -> Nat 

rules
   REC_E: plus (d0(), N) -> N
   REC_E: plus (s (N), M) -> s (plus (N, M))
   REC_E: fibb (d0()) -> d0()
   REC_E: fibb (s (d0())) -> s (d0())
   REC_E: fibb (s (s (N))) -> plus (fibb (s (N)), fibb (N))

strategies
   eval = memo (innermost (REC_E))
   eval-and-print = eval ; debug (!"result = ")
   main =
      (<eval-and-print> fibb (<?[_, <read-from-string> | _]>)) ;
      <exit> 0
