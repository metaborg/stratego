module revnat100

imports libstrategolib

signature

sorts
   Nat List

constructors
   l : Nat * List -> List 
   nil : List 
   d0 : Nat 
   s : Nat -> Nat 
   d10 : Nat 
   plus : Nat * Nat -> Nat 
   times : Nat * Nat -> Nat 
   gen : Nat -> List 
   conc : List * List -> List 
   rev : List -> List 

rules
   REC_E: d10() -> s (s (s (s (s (s (s (s (s (s (d0()))))))))))
   REC_E: plus (d0(), N) -> N
   REC_E: plus (s (N), M) -> s (plus (N, M))
   REC_E: times (d0(), N) -> d0()
   REC_E: times (s (N), M) -> plus (M, times (N, M))
   REC_E: gen (s (N)) -> l (s (N), gen (N))
   REC_E: gen (d0()) -> l (d0(), nil())
   REC_E: conc (l (E, L1), L2) -> l (E, conc (L1, L2))
   REC_E: conc (nil(), L2) -> L2
   REC_E: rev (l (E, L1)) -> conc (rev (L1), l (E, nil()))
   REC_E: rev (nil()) -> nil()

strategies
   eval = memo (innermost (REC_E))
   eval-and-print = eval ; debug (!"result = ")
   main = 
      (<eval-and-print> rev (gen (times (d10(), d10())))) ;
      <exit> 0
