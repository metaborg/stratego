module check2

imports libstrategolib

signature

sorts
   Bool

constructors
   true : Bool 
   false : Bool 
   notBool : Bool -> Bool 
   andBool : Bool * Bool -> Bool 
   orBool : Bool * Bool -> Bool 
   xorBool : Bool * Bool -> Bool 
   impliesBool : Bool * Bool -> Bool 
   iffBool : Bool * Bool -> Bool 
   eqBool : Bool * Bool -> Bool 
   neBool : Bool * Bool -> Bool 

rules
   REC_E: notBool (true()) -> false()
   REC_E: notBool (false()) -> true()
   REC_E: andBool (P, true()) -> P
   REC_E: andBool (P, false()) -> false()
   REC_E: orBool (P, true()) -> true()
   REC_E: orBool (P, false()) -> P
   REC_E: xorBool (P, Q) -> orBool (andBool (P, notBool (Q)), andBool (Q, notBool (P)))
   REC_E: impliesBool (P, Q) -> orBool (Q, notBool (P))
   REC_E: iffBool (P, Q) -> andBool (impliesBool (P, Q), impliesBool (Q, P))
   REC_E: eqBool (P, Q) -> iffBool (P, Q)
   REC_E: neBool (P, Q) -> xorBool (P, Q)

strategies
   eval = memo (innermost (REC_E))
   eval-and-print = eval ; debug (!"result = ")
   main = 
      (<eval-and-print> neBool (false(), true())) ;
      <exit> 0
