module gradual-types/signatures

imports
  core/identifiers

sorts Type SortT Dyn ConstrType
context-free syntax
  Dyn.Dyn = [?]
  Type.DynT = Dyn
  Type.StringT    = "string"
  Type.IntT       = "int"
  Type.RealT      = "real"
  Type.TupleT     = [[Type] * [Type]] {right}
  Type = SortT
  SortT.Sort       = [[Id]([{Type ", "}*])]
  SortT.SortNoArgs = UCID
  SortT.SortVar    = SortVar

sorts SType SFunType
context-free syntax
  SType.SDyn = [?]
  SType = SFunType
  SFunType.FunNoArgsType = [[Type] -> [Type]]
  SFunType.FunType = [([{SType ", "}*]) [Type] -> [Type]]
  SFunType.FunTType = [([{SType ", "}*] | [{Type ", "}*]) [Type] -> [Type]]
