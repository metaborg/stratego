module analysis/signatures

imports

signatures/gradual-types/signatures-sig

signature constructors

StringT : Type
IntT : Type
RealT : Type

IllFormedSort : Id * List(Type) -> Type

ConstrType : List(Type) * Type -> ConstrType

ErrT : Type
FailT : Type

ProxyT : List(SCoercion) * List(Coercion) * Coercion * Coercion * Id -> Proxy
Proxy : Coercion * Coercion * Strategy -> Proxy
: Proxy -> Strategy

Fail : Coercion
Id : Coercion
RuntimeCheck : Type -> Coercion
Cast : Coercion -> Strategy

SId : SCoercion
SRuntimeCheck : SFunType -> SCoercion

Err  : MessageType
Warn : MessageType
Note : MessageType


CallDynamicNotSupported              : ErrorDesc

TermVariableTypedWithStrategyType    : ErrorDesc
StrategyVariableTypedWithTermType    : ErrorDesc

DuplicateTypeDefinition              : ErrorDesc
MissingDefinitionForTypeDefinition   : ErrorDesc

ProceedWrongNumberOfArguments        : Int * Int -> ErrorDesc

CallStrategyArgumentTakesParameters  : SFunType -> ErrorDesc

NoInjectionBetween                   : Type * Type -> ErrorDesc
VariableBoundToIncompatibleType      : Type * Type -> ErrorDesc
TypeMismatch                         : Type * Type -> ErrorDesc
STypeMismatch                        : SType * SType -> ErrorDesc
UnresolvedName                       : ErrorDesc

AsInBuildTerm                        : ErrorDesc
WldInBuildTerm                       : ErrorDesc
BuildDefaultInBuildTerm              : ErrorDesc
BuildDefaultInMatchTerm              : ErrorDesc
StringQuotationInMatchTerm           : ErrorDesc

NonStringOrListInExplodeConsPosition : Type -> ErrorDesc
NonListInAnno                        : Type -> ErrorDesc
MultipleAppsInMatch                  : ErrorDesc

BuildUnboundTerm                     : ErrorDesc

overlays

  FunTType(from, to) = FunTType([], [], from, to)
  FunTType(ft) = FunTType(ft, ft)
  FunTType() = FunTType(Dyn())
  ListT(elem) = Sort("List", [elem])
  ListT() = ListT(Dyn())
  TupleT(elems) = Sort("Tuple", elems)