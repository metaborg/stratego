module Stratego-Core-in-Stratego

imports
  stratego/core
  stratego/core/modules
  stratego/core/signatures
  stratego/sugar/signatures
  stratego/sugar/overlays
  //StrategoRenamed

context-free start-symbols

  Module

context-free syntax

  StrategoTerm.ToTerm = "|[" Module "]|" {prefer}
  StrategoTerm.ToTerm = "Module" "|[" Module "]|" 
  StrategoTerm.ToTerm = "|[" Decl "]|" 
  StrategoTerm.ToTerm = "|[" Sdecl "]|" 
  StrategoTerm.ToTerm = "|[" Opdecl "]|" 
  StrategoTerm.ToTerm = "Constr" "|[" Opdecl "]|" 
  StrategoTerm.ToTerm = "|[" Type "]|" 
  StrategoTerm.ToTerm = "Type" "|[" Type "]|" 
  StrategoTerm.ToTerm = "Decl" "|[" Decl "]|" 
  StrategoTerm.ToTerm = "Decl*" "|[" Decl* "]|" 
  StrategoTerm.ToTerm = "Sort" "|[" Sort "]|" 
  StrategoTerm.ToTerm = "|[" Term "]|" 
  StrategoTerm.ToTerm = "Term" "|[" Term "]|" 
  StrategoTerm.ToTerm = "PreTerm" "|[" PreTerm "]|" 
  StrategoTerm.ToTerm = "|[" Def "]|" 
  StrategoTerm.ToTerm = "Def" "|[" Def "]|" 
  StrategoTerm.ToTerm = "Def*" "|[" Def* "]|" 
  StrategoTerm.ToTerm = "|[" Rule "]|" 
  StrategoTerm.ToTerm = "Rule" "|[" Rule "]|" 
//  StrategoTerm.ToTerm = "|[" StratRule "]|" 
  StrategoTerm.ToTerm = "|[" Strategy "]|" 
  StrategoTerm.ToTerm = "Strat" "|[" Strategy "]|" 
  StrategoTerm.ToTerm = "Strategy" "|[" Strategy "]|" 
  StrategoTerm.ToTerm = "O" "|[" Overlay "]|" 
  StrategoTerm.ToTerm = "Overlay" "|[" Overlay "]|" 
  StrategoTerm.ToTerm = "Typedid" "|[" Typedid "]|" 
  StrategoTerm.ToTerm = "Typedid*" "|[" {Typedid ","}* "]|" 
  StrategoTerm.ToTerm = "DynRuleDef" "|[" DynRuleDef "]|" 

context-free syntax

  ModName.FromTerm = "~" StrategoTerm 
  {Term ","}+.FromTerm = "~*" StrategoTerm 
  Term.FromTerm = "~" StrategoTerm 
  Term.FromTerm = "~term:" StrategoTerm 
  {Term ","}*.FromTerm = "~term*:" StrategoTerm 
  {Term ","}+.FromTerm = "~term*:" StrategoTerm 
  {Id ","}+.FromTerm = "~" StrategoTerm 
  Strategy.FromTerm = "~" StrategoTerm 
  Strategy.FromTerm = "~strat:" StrategoTerm 
  {Strategy ","}*.FromTerm = "~*" StrategoTerm 
  {Strategy ","}*.FromTerm = "~strat*:" StrategoTerm 
  Sort.FromTerm = "~srt:" StrategoTerm 
  LCID.FromTerm = "~srtvar:" StrategoTerm 
  UCID.FromTerm = "~srtid:" StrategoTerm 
  Id.FromTerm = "~id:" StrategoTerm 
  Int.FromTerm = "~int:" StrategoTerm 
  String.FromTerm = "~str:" StrategoTerm 
  Def.FromTerm = "~" StrategoTerm 
  Def*.FromTerm = "~*" StrategoTerm 
  Opdecl*.FromTerm = "~*" StrategoTerm 
  {Type "*"}+.FromTerm = "~*" StrategoTerm 
  {Typedid ","}*.FromTerm = "~*" StrategoTerm 
  {Typedid ","}*.FromTerm = "~typed-id*:" StrategoTerm 

context-free syntax

//  StrategoStrategyAngle = "<" StrategoStrategy ">" {bracket}
  StrategoStrategy = "(" StrategoStrategy ")" {bracket, prefer}

variables

  Id = [xyzfglc] [0-9\']* {prefer}
  {Id ","}* = [xyzfgl] [0-9\']* "*" {prefer}
  {Id ","}* = "xs" [0-9\']* {prefer}
  Id = [xyzfglc] "_" [A-Za-z0-9\'\-\_]+ {prefer}
  Id* = [xyzfglc] "_" [A-Za-z0-9\'\-\_]+ "*" {prefer}
  {Id ","}* = [xyzfgl] [0-9\']* "*" {prefer}
  PreTerm = "pt" [0-9\']* {prefer}
  Term = "t" [0-9\']* {prefer}
  {Term ","}* = "t" [0-9\']* "*" {prefer}
  {Term ","}* = "ts" [0-9\']* {prefer}
  Term = "t" "_" [A-Za-z0-9\'\-\_]+ {prefer}
  {Term ","}* = "t" "_" [A-Za-z0-9\'\-\_]+ "*" {prefer}
  String = "str" [0-9\']* {prefer}
  Strategy = "s" [0-9\']* {prefer}
  {Strategy ","}* = "ss" [0-9\']* {prefer}
  {Strategy ","}* = "s" [0-9\']* "*" {prefer}
  Strategy = "s" "_" [A-Za-z0-9\'\-\_]+ {prefer}
  {Strategy ","}* = "s" "_" [A-Za-z0-9\'\-\_]+ "*" {prefer}
  Rule = "r" [0-9\']* {prefer}
  RuleDef = "rd" [0-9\']* {prefer}
  RuleDef* = "rd" [0-9\']* "*" {prefer}
  Typedid = "a" [0-9\']* {prefer}
  {Typedid ","}+ = "a" [0-9\']* "*" {prefer}
  {Typedid ","}+ = "as" [0-9\']* {prefer}
  Typedid = "a" "_" [A-Za-z0-9\'\-\_]+ {prefer}
  {Typedid ","}+ = "a" "_" [A-Za-z0-9\'\-\_]+ "*" {prefer}
  Type = "tp" [0-9\']* 
  {Type "*"}+ = "tp" [0-9\']* "*" 
  Sort = "srt" [0-9\']* {prefer}
  {Sort ","}* = "srt" [0-9\']* "*" {prefer}
  UCID = "srt" [xyz] [0-9\']* {prefer}
  ModName = "M" [0-9\']* {prefer}

variables

  DynRuleScopeId = "sc" [0-9\']* {prefer}
  {DynRuleScopeId ","}* = "sc" [0-9\']* "*" {prefer}
  DynRuleId = "dr" [0-9\']* {prefer}
  DynRuleDef = "drd" [0-9\']* {prefer}
  DynRuleDef+ = "drd" [0-9\']* "*" {prefer}

lexical syntax

  Id = "xs" [0-9\']* {reject}
  Id = [t] [0-9\']* {reject}
  Id = "ts" [0-9\']* {reject}
  Id = "t" "_" [A-Za-z0-9\'\-\_]+ {reject}
  Id = "t" "_" [A-Za-z0-9\'\-\_]+ "*" {reject}
  Id = [s] [0-9\']* {reject}
  Id = "ss" [0-9\']* {reject}
  Id = [r] [0-9\']* {reject}
  Id = "a" [0-9\']* {reject}
  Id = "as" [0-9\']* {reject}

//lexical syntax
//
//  LAYOUT = StrategoShortCom {prefer}
//  LAYOUT = StrategoLongCom {prefer}
//  LAYOUT = StrategoVeryLongCom {prefer}
//  LAYOUT = StrategoWs {prefer}


//module Stratego-Core-in-Stratego
//imports Stratego-Core StrategoRenamed
//  context-free start-symbols StrategoModule
//
//
//
//  context-free syntax
//
//              "|[" Module "]|" -> StrategoTerm {cons("ToTerm"),prefer}
//    "Module"  "|[" Module "]|" -> StrategoTerm {cons("ToTerm")}
//
//              "|[" Decl   "]|" -> StrategoTerm {cons("ToTerm")}
//              "|[" Sdecl  "]|" -> StrategoTerm {cons("ToTerm")}
//
//              "|[" Opdecl "]|" -> StrategoTerm {cons("ToTerm")}
//    "Constr"  "|[" Opdecl "]|" -> StrategoTerm {cons("ToTerm")}
//
//              "|[" Type   "]|" -> StrategoTerm {cons("ToTerm")}
//    "Type"    "|[" Type   "]|" -> StrategoTerm {cons("ToTerm")}
//
//    "Decl"    "|[" Decl  "]|" -> StrategoTerm {cons("ToTerm")}
//    "Decl*"   "|[" Decl* "]|" -> StrategoTerm {cons("ToTerm")}
//
//    "Sort"    "|[" Sort   "]|" -> StrategoTerm {cons("ToTerm")}
//
//              "|[" Term   "]|" -> StrategoTerm {cons("ToTerm")}
//    "Term"    "|[" Term   "]|" -> StrategoTerm {cons("ToTerm")}
//
//    "PreTerm" "|[" PreTerm   "]|" -> StrategoTerm {cons("ToTerm")}
//
//              "|[" Def    "]|" -> StrategoTerm {cons("ToTerm")}
//    "Def"     "|[" Def    "]|" -> StrategoTerm {cons("ToTerm")}
//    "Def*"    "|[" Def* "]|" -> StrategoTerm {cons("ToTerm")}
//
//             "|[" Rule      "]|" -> StrategoTerm {cons("ToTerm")}
//    "Rule"   "|[" Rule      "]|" -> StrategoTerm {cons("ToTerm")}
//             "|[" StratRule "]|" -> StrategoTerm {cons("ToTerm")}
//
//               "|[" Strategy "]|" -> StrategoTerm {cons("ToTerm")}
//    "Strat"    "|[" Strategy "]|" -> StrategoTerm {cons("ToTerm")}
//    "Strategy" "|[" Strategy "]|" -> StrategoTerm {cons("ToTerm")}
//
//    "O"        "|[" Overlay  "]|" -> StrategoTerm {cons("ToTerm")}
//    "Overlay"  "|[" Overlay  "]|" -> StrategoTerm {cons("ToTerm")}
//
//    "Typedid"  "|[" Typedid         "]|" -> StrategoTerm {cons("ToTerm")}
//    "Typedid*" "|[" { Typedid ","}* "]|" -> StrategoTerm {cons("ToTerm")}
//    
//%%               "|[" DynRuleDef   "]|" -> StrategoTerm {cons("ToTerm")}
//    "DynRuleDef" "|[" DynRuleDef   "]|" -> StrategoTerm {cons("ToTerm")}
//
//  context-free syntax
//
//    %% From Term
//
//    "~"         StrategoTerm -> ModName          {cons("FromTerm")}
//    "~*"        StrategoTerm -> {Term ","}+      {cons("FromTerm")}
//
//    "~"         StrategoTerm -> Term             {cons("FromTerm")}
//    "~term:"    StrategoTerm -> Term             {cons("FromTerm")}
//    "~term*:"   StrategoTerm -> {Term ","}*      {cons("FromTerm")}
//    "~term*:"   StrategoTerm -> {Term ","}+      {cons("FromTerm")}
//    "~"         StrategoTerm -> {ID   ","}+      {cons("FromTerm")}
//
//    "~"         StrategoTerm -> Strategy         {cons("FromTerm")}
//    "~strat:"   StrategoTerm -> Strategy         {cons("FromTerm")}
//    "~*"        StrategoTerm -> {Strategy ","}*  {cons("FromTerm")}
//    "~strat*:"  StrategoTerm -> {Strategy ","}*  {cons("FromTerm")}
//
//    "~srt:"     StrategoTerm -> Sort {cons("FromTerm")}
//    "~srtvar:"  StrategoTerm -> LCID {cons("FromTerm")}
//    "~srtid:"   StrategoTerm -> UCID {cons("FromTerm")}
//
//    "~id:"    StrategoTerm -> Id        {cons("FromTerm")}
//    "~int:"   StrategoTerm -> Int       {cons("FromTerm")}
//    "~str:"   StrategoTerm -> String    {cons("FromTerm")}
//
//    "~"   StrategoTerm -> Def       {cons("FromTerm")}
//    "~*"  StrategoTerm -> Def*      {cons("FromTerm")}
//
//    "~*"  StrategoTerm -> Opdecl*      {cons("FromTerm")}
//    "~*"  StrategoTerm -> {Type "*"}+  {cons("FromTerm")}
//
//    "~*"          StrategoTerm -> {Typedid ","}*   {cons("FromTerm")}
//    "~typed-id*:" StrategoTerm -> {Typedid ","}*   {cons("FromTerm")}
//
//  context-free syntax 
//
//    %% Hacks
//
//    "<" StrategoStrategy ">" -> StrategoStrategyAngle {bracket}
//    "(" StrategoStrategy ")" -> StrategoStrategy {bracket,prefer}
//
//  variables
//    [xyzfglc][0-9\']*       -> Id       {prefer}
//    [xyzfgl][0-9\']*  "*"   -> {Id ","}* {prefer}
//    "xs"[0-9\']*            -> {Id ","}* {prefer}
//
//    [xyzfglc] "_" [A-Za-z0-9\'\-\_]+     -> Id {prefer}
//    [xyzfglc] "_" [A-Za-z0-9\'\-\_]+ "*" -> Id* {prefer}
//
//    [xyzfgl][0-9\']*  "*"   -> {ID ","}* {prefer}
//
//    "pt"[0-9\']*           -> PreTerm     {prefer}
//
//    "t"[0-9\']*           -> Term     {prefer}
//    "t"[0-9\']*   "*"     -> {Term ","}*     {prefer}
//    "ts"[0-9\']*          -> {Term ","}*     {prefer}
//  
//    "t" "_" [A-Za-z0-9\'\-\_]+     -> Term {prefer}
//    "t" "_" [A-Za-z0-9\'\-\_]+ "*" -> {Term ","}* {prefer} 
//
//    "str"[0-9\']*         -> String {prefer}
//
//    "s"[0-9\']*           -> Strategy {prefer}
//    "ss"[0-9\']*          -> {Strategy ","}* {prefer}
//    "s"[0-9\']*   "*"     -> {Strategy ","}* {prefer}
//        
//    "s" "_" [A-Za-z0-9\'\-\_]+     -> Strategy {prefer}
//    "s" "_" [A-Za-z0-9\'\-\_]+ "*" -> {Strategy ","}* {prefer}
//
//    "r"[0-9\']*           -> Rule {prefer}
//
//    "rd"[0-9\']*          -> RuleDef {prefer}
//    "rd"[0-9\']*  "*"     -> RuleDef* {prefer}
//
//    "a"[0-9\']*           -> Typedid        {prefer}
//    "a"[0-9\']*   "*"     -> {Typedid ","}+ {prefer}
//    "as"[0-9\']*          -> {Typedid ","}+ {prefer} 
//
//    "a" "_" [A-Za-z0-9\'\-\_]+     -> Typedid {prefer}
//    "a" "_" [A-Za-z0-9\'\-\_]+ "*" -> {Typedid ","}+ {prefer}
//
//    "tp"[0-9\']*          -> Type 
//    "tp"[0-9\']*  "*"     -> {Type "*"}+  
//
//    "srt" [0-9\']*        -> Sort         {prefer}
//    "srt" [0-9\']* "*"    -> {Sort ","}*  {prefer}
//    "srt" [xyz] [0-9\']*  -> UCID         {prefer}
//
//    "M"   [0-9\']*        -> ModName {prefer}
//
//  variables
//    "sc" [0-9\']*         -> DynRuleScopeId        {prefer}
//    "sc" [0-9\']* "*"     -> {DynRuleScopeId ","}* {prefer}
//
//    "dr" [0-9\']*         -> DynRuleId {prefer}
//
//    "drd"[0-9\']*         -> DynRuleDef {prefer}
//    "drd"[0-9\']*  "*"    -> DynRuleDef+ {prefer}
//
//  lexical syntax
//    "xs"[0-9\']*          -> Id  {reject}
//
//    [t][0-9\']*           -> Id  {reject}
//    "ts"[0-9\']*          -> Id  {reject}  
//  
//    "t" "_" [A-Za-z0-9\'\-\_]+     -> Id {reject}
//    "t" "_" [A-Za-z0-9\'\-\_]+ "*" -> Id {reject}
//
//    [s][0-9\']*           -> Id  {reject}
//    "ss"[0-9\']*          -> Id  {reject}
//
//    [r][0-9\']*           -> Id  {reject}
// 
//    "a"[0-9\']*           -> Id  {reject}
//    "as"[0-9\']*          -> Id  {reject} 
//
//  lexical syntax
//    StrategoShortCom 	-> LAYOUT {prefer}
//    StrategoLongCom 	-> LAYOUT {prefer}
//    StrategoVeryLongCom -> LAYOUT {prefer}
//    StrategoWs 		-> LAYOUT {prefer}
