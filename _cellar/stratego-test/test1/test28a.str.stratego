module test28a
imports collection/list/cons collection/tuple/cons
signature
  sorts Exp Type
  constructors
    Var   : String -> Exp
    Plus  : Exp * Exp -> Exp
    Int   : Type
    Float : Type 
    Foo   : List(Type) -> Type
    stderr : Bla

strategies

  try(s) = 
    s <+ id

  main =
    !Var("a"){Int, Float}
    ; try( \ Var(s){ts*} -> Var(s){Foo(ts*)} \ )
    ; ?Var("a"){Foo([Int,Float])}
    ; {a* : ?a* }
    ; ?Var("a"){Foo([a, b*])}
    ; ![b*,a,b*]

  conc :
    ([x | xs], ys) -> [x | <conc>(xs, ys)]

  conc :
    ([], ys) -> ys

  is-list =
    ?[] <+ ?[_|_]

  makeConc =
    ?(xs, ys)
    ; if <is-list> xs; <is-list>ys then <conc>(xs, ys) else !Conc(xs, ys) end
